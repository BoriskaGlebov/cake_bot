import logging
import sys

from config_data.logger_config import *
import os.path

from aiogram import Router, F
from aiogram.filters import Command

from tg_api.states.user_state import MovieSearch
from tg_api.handlers.custom_handlers.common_func import *

from database.models.models import db, Top100Films

logger= logging.getLogger(f'main.tg_api.handlers.custom_handlers.{os.path.basename(__file__)}')
sys.excepthook=any_exception

router = Router()
user_data = {}
dict_with_films = {}


@router.message(F.text == '–¢–æ–ø 100 üé• –ö–∏–Ω–æ–ø–æ–∏—Å–∫–∞')
@router.message(Command('top_100'))
async def finder_film(message: Message, state: FSMContext):
    """–î–µ–π—Å—Ç–≤–∏–µ –ø–æ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ —Ç–æ–ø 100 —Ñ–∏–ª—å–º–æ–≤, –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫"""
    logger.debug('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É –¢–û–ü 100 –§–ò–õ–¨–ú–û–í')
    await state.set_state(MovieSearch.choosing_top_100)
    user_inf = message.from_user
    await message.answer('ü§ñ –£–∂–µ —á–µ—Ä–µ–∑ —Å–µ–∫—É–Ω–¥—É –ø–æ–∫–∞–∂—É —ç—Ç–∏ —Ñ–∏–ª—å–º—ã', reply_markup=ReplyKeyboardRemove())
    await rez_finder(message, state, MovieSearch.changing_films_top_100, Top100Films)
    logger.info('–ö–Ω–æ–ø–∫–∞ top_100 –æ—Ç—Ä–∞–±–æ—Ç–∞–ª–∞ —Ö–æ—Ä–æ—à–æ')


@router.callback_query(MovieSearch.changing_films_top_100, F.data.startswith("num_"))
async def callbacks_films(callback: CallbackQuery, state: FSMContext):
    await callbacks_num(callback, state, MovieSearch.changing_films_top_100)
