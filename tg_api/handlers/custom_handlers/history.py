import logging
import os
import sys

from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message

from config_data.logger_config import any_exception
from database.models.models import User

from database.models.models import FilmsBase, Find_Film_Param

logger = logging.getLogger(f'main.tg_api.handlers.custom_handlers.{os.path.basename(__file__)}')
sys.excepthook = any_exception

router = Router()


@router.message(F.text == 'üìú–ò—Å—Ç–æ—Ä–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤')
@router.message(Command('history'))
async def history(message: Message):
    """–ò—Ç–æ—Ä–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ –ë–æ—Ç—É"""
    logger.debug(f'{history.__name__} - –Ω–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã')
    await message.answer('–ó–¥–µ—Å—å –ø–æ–∫–∞–∂—É –∏—Å—Ç–æ—Ä–∏—é –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ –ø–æ–∏—Å–∫—É —Ñ–∏–ª—å–º–æ–≤')
    value = FilmsBase.select(FilmsBase.query).join(User).where(User.user_id == message.from_user.id)
    out_res = set(el.query for el in value)
    if len(out_res):
        await message.answer(text='\n'.join(out_res))
    else:
        await message.answer('–ê –≤—ã –µ—â–µ –Ω–µ –∏—Å–∫–∞–ª–∏ —Ñ–∏–ª—å–º—ã')
    await message.answer('–ó–¥–µ—Å—å –ø–æ–∫–∞–∂—É –∏—Å—Ç–æ—Ä–∏—é –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ –ø–æ–∏—Å–∫—É —Ñ–∏–ª—å–º–æ–≤ c –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏')
    value2 = Find_Film_Param.select(Find_Film_Param.query).join(User).where(User.user_id == message.from_user.id)
    out_res2 = set(el.query for el in value2)
    if len(out_res2):
        for el in out_res2:
            await message.answer(text='–¢–∏–ø = {0}\n'
                                      '–ì–æ–¥ = {1}\n'
                                      '–†–µ–π—Ç–∏–Ω–≥ = {2}\n'
                                      '–ñ–∞–Ω—Ä = {3}\n'
                                      '–°—Ç—Ä–∞–Ω–∞= {4}\n'
                                 .format(*el.split(',')))
    else:
        await message.answer('–ê –≤—ã –µ—â–µ –Ω–µ –∏—Å–∫–∞–ª–∏ —Ñ–∏–ª—å–º—ã –ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º')
    logger.info(f'{history.__name__} - –æ—Ç—Ä–∞–±–æ—Ç–∞–ª–∞ —Ö–æ—Ä–æ—à–æ')
