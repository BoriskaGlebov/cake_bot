import logging
from config_data.logger_config import *
import os.path
import sys

from aiogram import Router, Bot, F
from aiogram.filters import Command, StateFilter
from aiogram.types import Message, ReplyKeyboardRemove
from tg_api.keyboards.reply.keybord_start import start_kb
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import default_state
from database.core import def_insert_user
from database.models.models import User
from tg_api.utils.set_bot_commands import set_main_menu_admdin,set_main_menu

logger = logging.getLogger(f'main.tg_api.handlers.custom_handlers.{os.path.basename(__file__)}')
sys.excepthook = any_exception

router = Router()


@router.message(Command('start'))
async def start_cmd(message: Message, bot: Bot, state: FSMContext):
    """–î–µ–π—Å—Ç–≤–∏—è –±–æ—Ç–∞ –ø–æ –∫–æ–º–∞–Ω–¥–µ start"""
    logger.debug('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É start')
    user = message.from_user
    if user.username == 'BorisisTheBlade':
        await set_main_menu_admdin(bot)
    else:
        await set_main_menu(bot)
    me = await bot.get_me()
    await state.clear()
    await message.answer(f'–ü—Ä–∏–≤–µ—Ç <b>{user.username}</b>!!!\n'
                         f'–ú–µ–Ω—è –∑–æ–≤—É—Ç <b>{me.first_name}</b> –∏ —è –º–æ–≥—É –æ—Ç–ª–∏—á–Ω–æ '
                         f'–ø–æ–º–æ—á—å —Å –ø–æ–∏—Å–∫–æ–º —Ñ–∏–ª—å–º–æ–≤ –Ω–∞ –≤–µ—á–µ—Ä.üé´',
                         reply_markup=start_kb())
    await message.answer_sticker(
        sticker='CAACAgIAAxkBAAELLfVlpBnLljNASTHd5o59TtC0zuC-'
                'sAACXQEAAooSqg7e1UbQcaOvXjQE')
    def_insert_user(User, user.id, user.username)
    logger.info(f'{start_cmd.__name__} - –æ—Ç—Ä–∞–±–æ—Ç–∞–ª–∞ —Ö–æ—Ä–æ—à–æ')


# –ù–µ—Ç—Ä—É–¥–Ω–æ –¥–æ–≥–∞–¥–∞—Ç—å—Å—è, —á—Ç–æ —Å–ª–µ–¥—É—é—â–∏–µ –¥–≤–∞ —Ö—ç–Ω–¥–ª–µ—Ä–∞ –º–æ–∂–Ω–æ
# —Å–ø–æ–∫–æ–π–Ω–æ –æ–±—ä–µ–¥–∏–Ω–∏—Ç—å –≤ –æ–¥–∏–Ω, –Ω–æ –¥–ª—è –ø–æ–ª–Ω–æ—Ç—ã –∫–∞—Ä—Ç–∏–Ω—ã –æ—Å—Ç–∞–≤–∏–º —Ç–∞–∫

# default_state - —ç—Ç–æ —Ç–æ –∂–µ —Å–∞–º–æ–µ, —á—Ç–æ –∏ StateFilter(None)
@router.message(StateFilter(default_state), Command(commands=["cancel"]))
@router.message(StateFilter(default_state), F.text.lower() == "–æ—Ç–º–µ–Ω–∞")
async def cmd_cancel_no_state(message: Message, state: FSMContext):
    """–°—Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ–≥–¥–∞ –±–æ—Ç –Ω–µ FSM"""
    logger.debug(f'{cmd_cancel_no_state.__name__} - –Ω–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã')
    await state.set_data({})
    await message.answer(
        text="–ù–µ—á–µ–≥–æ –æ—Ç–º–µ–Ω—è—Ç—å",
        reply_markup=ReplyKeyboardRemove()
    )
    logger.info(f'{cmd_cancel_no_state.__name__} - —Å—Ç–∞—Ç—É—Å –æ–±–Ω—É–ª–µ–Ω')


@router.message(Command(commands=["cancel"]), ~StateFilter(default_state))
@router.message(F.text.lower() == "–æ—Ç–º–µ–Ω–∞", ~StateFilter(default_state))
@router.message(F.text.lower() == "–≥–∞–ª—è , —É –Ω–∞—Å –æ—Ç–º–µ–Ω–∞", ~StateFilter(default_state))
async def cmd_cancel(message: Message, state: FSMContext):
    """–°—Ä–∞–±–æ—Ç–∞–µ—Ç –µ—Å–ª–∏ –±–æ—Ç –≤ FSM"""
    logger.debug(f'{cmd_cancel.__name__} - –Ω–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã')
    await state.clear()
    await message.answer(
        text="–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ",
        reply_markup=start_kb()
    )
    logger.info(f'{cmd_cancel.__name__} - —Å—Ç–∞—Ç—É—Å –æ–±–Ω—É–ª–µ–Ω')
